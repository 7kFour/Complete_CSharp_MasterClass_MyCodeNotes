These are some of the things you will use the most

you will notice that often the capital letter is the opposite of the lowercase see \s \S below for instance
there are examples in the sample.txt as well

CHARACTER ESCAPES
\t 		- Matches a tab
\n 		- Matches a new line

CHARACTER CLASSES
.       - Wildcard: Matches any single character except \n.
\d      - Matches any decimal digit. (0-9)
\D      - Matches any character other than a decimal digit. (0-9)
\w      - Word Character (a-z, A-Z, 0-9, _)
\W      - Not a Word Character
\s      - Matches any white-space character. (space, tab, newline)
\S      - Matches any non-white-space character (space, tab, newline)
[character_group]     - Matches any single character in character_group. By default, the match is case-sensitive.
[^character_group]    - Negation: Matches any single character that is not in character_group. By default, characters in character_group are case-sensitive.

[a-zA-Z] would check for all lower and uppercase letters from a to z 
[afoq] will highlight all the a, f, o, q 
[^1-5] all the numbers except 1-5

ANCHORS
^       - The match must start at the beginning of the string or line.
$       - The match must occur at the end of the string or before \n at the end of the line or string.
\A		- The match must occur at the start of the string.
\Z 		- The match must occur at the end of the string or before \n at the end of the string.
\b      - Word Boundary -- check this one against LALA LA LA LALA with \bLA and you'll see what it does
\B      - Not a Word Boundary

ALTERNATION CONSTRUCTS
|       - Either Or

GROUPING CONSTRUCT
( )     - Group

Quantifiers:
*       - Matches the previous element zero or more times.
+       - Matches the previous element one or more times.
?       - Matches the previous element zero or one time.
{n}     - Matches the previous element exactly n times.
{n,m}   - Matches the previous element at least n times, but no more than m times.


